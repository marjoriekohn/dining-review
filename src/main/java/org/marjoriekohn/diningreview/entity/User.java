package org.marjoriekohn.diningreview.entity;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import jakarta.persistence.*;
import jakarta.validation.constraints.*;
import lombok.*;
import java.util.ArrayList;
import java.util.List;

/**
 * Represents a user entity in the application.
 * The User class captures various attributes of a user, including their location,
 * allergy information, and reviews they have submitted. It also includes annotations
 * for persistence, specifying how the object maps to a database table. The User entity
 * is uniquely identified by an autogenerated ID.
 *
 * @see org.marjoriekohn.diningreview.dto.UserDTO
 * @see org.marjoriekohn.diningreview.repository.UserRepository
 */
@Entity
@Table(name = "user_account")
@NoArgsConstructor
@AllArgsConstructor
@Getter
@Setter
public class User {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false)
    private Long id;

    @Column(name = "username", unique = true, nullable = false)
    @Size(min = 8, max = 15)
    private String username;

    @Column(name = "city")
    private String city;

    @Column(name = "state")
    private String state;

    @Column(name = "zipcode")
    @Pattern(regexp = "^[0-9]{5}(?:-[0-9]{4})?$", message = "Invalid Zip Code")
    private String zipcode;

    @Column(name = "peanut_allergy")
    private Boolean hasPeanutAllergies;

    @Column(name = "egg_allergy")
    private Boolean hasEggAllergies;

    @Column(name = "dairy_allergy")
    private Boolean hasDairyAllergies;

    @OneToMany(mappedBy = "user", cascade = CascadeType.ALL, orphanRemoval = true)
    @JsonManagedReference(value="user-reviews")
    private List<Review> reviews = new ArrayList<>();
}