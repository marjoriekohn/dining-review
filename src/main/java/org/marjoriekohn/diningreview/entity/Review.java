package org.marjoriekohn.diningreview.entity;

import com.fasterxml.jackson.annotation.JsonBackReference;
import jakarta.persistence.*;
import jakarta.validation.constraints.NotNull;
import lombok.*;
import org.hibernate.validator.constraints.Range;

/**
 * Represents a review entity in the application.
 * The Review class captures various attributes of a review, including scores for different
 * types of allergies, comments, and its approval status. It is uniquely identified by an
 * autogenerated ID and is associated with a User and a Restaurant.
 *
 * @see org.marjoriekohn.diningreview.entity.User
 * @see org.marjoriekohn.diningreview.entity.Restaurant
 */

@Entity
@Table(name="review")
@NoArgsConstructor
@AllArgsConstructor
@Getter
@Setter
public class Review {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @ManyToOne
    @NotNull
    @JoinColumn(name = "user_id")
    @JsonBackReference(value="user-reviews")
    private User user;

    @ManyToOne
    @NotNull
    @JoinColumn(name = "restaurant_id")
    @JsonBackReference(value="restaurant-reviews")
    private Restaurant restaurant;

    @Column(name = "peanut_score")
    @Range(min = 1, max = 5)
    private Integer peanutScore;

    @Column(name = "egg_score")
    @Range(min = 1, max = 5)
    private Integer eggScore;

    @Column(name = "dairy_score")
    @Range(min = 1, max = 5)
    private Integer dairyScore;

    @Column(name = "comments", length = 500)
    private String comments;
    
    @Enumerated(EnumType.STRING)
    @Column(name = "status", nullable = false, columnDefinition = "varchar(255) default 'PENDING'")
    private Status status = Status.PENDING;

    public enum Status {
        PENDING, APPROVED, REJECTED
    }
}
